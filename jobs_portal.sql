--
-- PostgreSQL database dump
--

-- Dumped from database version 14.7 (Ubuntu 14.7-0ubuntu0.22.04.1)
-- Dumped by pg_dump version 14.7 (Ubuntu 14.7-0ubuntu0.22.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: accounts_city; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.accounts_city (
    id bigint NOT NULL,
    name character varying(30) NOT NULL
);


ALTER TABLE public.accounts_city OWNER TO abbas;

--
-- Name: accounts_city_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.accounts_city ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.accounts_city_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: accounts_profile; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.accounts_profile (
    id bigint NOT NULL,
    phone_number character varying(15) NOT NULL,
    image character varying(100),
    city_id bigint,
    user_id integer NOT NULL
);


ALTER TABLE public.accounts_profile OWNER TO abbas;

--
-- Name: accounts_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.accounts_profile ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.accounts_profile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO abbas;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO abbas;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO abbas;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO abbas;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO abbas;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO abbas;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: contact_contactinfo; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.contact_contactinfo (
    id bigint NOT NULL,
    place character varying(50) NOT NULL,
    phone_number character varying(15) NOT NULL,
    email character varying(100) NOT NULL
);


ALTER TABLE public.contact_contactinfo OWNER TO abbas;

--
-- Name: contact_contactinfo_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.contact_contactinfo ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.contact_contactinfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO abbas;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO abbas;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO abbas;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO abbas;

--
-- Name: jobs_applicantsdata; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.jobs_applicantsdata (
    id bigint NOT NULL,
    name character varying(100) NOT NULL,
    email character varying(100) NOT NULL,
    website character varying(200),
    cv character varying(100) NOT NULL,
    cover_latter text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    job_id bigint NOT NULL
);


ALTER TABLE public.jobs_applicantsdata OWNER TO abbas;

--
-- Name: jobs_applicantsdata_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.jobs_applicantsdata ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.jobs_applicantsdata_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: jobs_category; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.jobs_category (
    id bigint NOT NULL,
    name character varying(25) NOT NULL
);


ALTER TABLE public.jobs_category OWNER TO abbas;

--
-- Name: jobs_category_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.jobs_category ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.jobs_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: jobs_job; Type: TABLE; Schema: public; Owner: abbas
--

CREATE TABLE public.jobs_job (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    job_type character varying(15) NOT NULL,
    description text NOT NULL,
    published_at timestamp with time zone NOT NULL,
    salary integer NOT NULL,
    experience integer NOT NULL,
    image character varying(100),
    slug character varying(50),
    category_id bigint NOT NULL
);


ALTER TABLE public.jobs_job OWNER TO abbas;

--
-- Name: jobs_job_id_seq; Type: SEQUENCE; Schema: public; Owner: abbas
--

ALTER TABLE public.jobs_job ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.jobs_job_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: accounts_city; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.accounts_city (id, name) FROM stdin;
1	Kali
\.


--
-- Data for Name: accounts_profile; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.accounts_profile (id, phone_number, image, city_id, user_id) FROM stdin;
1	0123456789		1	1
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add city	1	add_city
2	Can change city	1	change_city
3	Can delete city	1	delete_city
4	Can view city	1	view_city
5	Can add profile	2	add_profile
6	Can change profile	2	change_profile
7	Can delete profile	2	delete_profile
8	Can view profile	2	view_profile
9	Can add log entry	3	add_logentry
10	Can change log entry	3	change_logentry
11	Can delete log entry	3	delete_logentry
12	Can view log entry	3	view_logentry
13	Can add permission	4	add_permission
14	Can change permission	4	change_permission
15	Can delete permission	4	delete_permission
16	Can view permission	4	view_permission
17	Can add group	5	add_group
18	Can change group	5	change_group
19	Can delete group	5	delete_group
20	Can view group	5	view_group
21	Can add user	6	add_user
22	Can change user	6	change_user
23	Can delete user	6	delete_user
24	Can view user	6	view_user
25	Can add content type	7	add_contenttype
26	Can change content type	7	change_contenttype
27	Can delete content type	7	delete_contenttype
28	Can view content type	7	view_contenttype
29	Can add session	8	add_session
30	Can change session	8	change_session
31	Can delete session	8	delete_session
32	Can view session	8	view_session
33	Can add category	9	add_category
34	Can change category	9	change_category
35	Can delete category	9	delete_category
36	Can view category	9	view_category
37	Can add job	10	add_job
38	Can change job	10	change_job
39	Can delete job	10	delete_job
40	Can view job	10	view_job
41	Can add applicants data	11	add_applicantsdata
42	Can change applicants data	11	change_applicantsdata
43	Can delete applicants data	11	delete_applicantsdata
44	Can view applicants data	11	view_applicantsdata
45	Can add contact info	12	add_contactinfo
46	Can change contact info	12	change_contactinfo
47	Can delete contact info	12	delete_contactinfo
48	Can view contact info	12	view_contactinfo
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$600000$xcDMYSvComNCWrLANu6hbZ$m4fi+j/zM9tDXhmbSFYD8FVIgM0HCaTUU390y7N+G34=	2023-05-01 13:41:26.867633+00	t	abbas				t	t	2023-04-29 22:03:56.372011+00
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: contact_contactinfo; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.contact_contactinfo (id, place, phone_number, email) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2023-04-29 22:07:45.855858+00	1	Kali	1	[{"added": {}}]	1	1
2	2023-04-29 22:10:28.248892+00	1	abbas	2	[{"changed": {"fields": ["City", "Phone number"]}}]	2	1
3	2023-04-29 22:10:32.158024+00	1	abbas	2	[]	2	1
4	2023-04-29 22:10:50.60032+00	1	IT	1	[{"added": {}}]	9	1
5	2023-04-29 22:14:11.412998+00	1	Python Engineer - AI Solutions	1	[{"added": {}}]	10	1
6	2023-04-29 22:14:17.985065+00	1	Python Engineer - AI Solutions	2	[]	10	1
7	2023-04-29 22:15:11.809094+00	1	Python Engineer - AI Solutions	2	[{"changed": {"fields": ["Description"]}}]	10	1
8	2023-04-29 22:34:40.365474+00	1	Sofia Flores	2	[]	11	1
9	2023-05-01 13:42:43.871781+00	2	Python Developer	1	[{"added": {}}]	10	1
10	2023-05-01 13:43:32.876579+00	3	Jr. Cloud Engineer (Python)	1	[{"added": {}}]	10	1
11	2023-05-01 13:44:00.608417+00	4	Software Engineer (Go/Python)	1	[{"added": {}}]	10	1
12	2023-05-01 13:44:30.587093+00	5	Working Student (f/m/d) - Software Testing	1	[{"added": {}}]	10	1
13	2023-05-01 13:45:08.578189+00	6	IT Student Assistant / Werkstudent (m/f/div)	1	[{"added": {}}]	10	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	accounts	city
2	accounts	profile
3	admin	logentry
4	auth	permission
5	auth	group
6	auth	user
7	contenttypes	contenttype
8	sessions	session
9	jobs	category
10	jobs	job
11	jobs	applicantsdata
12	contact	contactinfo
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2023-04-29 17:59:45.210765+00
2	auth	0001_initial	2023-04-29 17:59:45.316217+00
3	accounts	0001_initial	2023-04-29 17:59:45.34857+00
4	admin	0001_initial	2023-04-29 17:59:45.378656+00
5	admin	0002_logentry_remove_auto_add	2023-04-29 17:59:45.391239+00
6	admin	0003_logentry_add_action_flag_choices	2023-04-29 17:59:45.405546+00
7	contenttypes	0002_remove_content_type_name	2023-04-29 17:59:45.426483+00
8	auth	0002_alter_permission_name_max_length	2023-04-29 17:59:45.442114+00
9	auth	0003_alter_user_email_max_length	2023-04-29 17:59:45.457333+00
10	auth	0004_alter_user_username_opts	2023-04-29 17:59:45.474565+00
11	auth	0005_alter_user_last_login_null	2023-04-29 17:59:45.488849+00
12	auth	0006_require_contenttypes_0002	2023-04-29 17:59:45.492652+00
13	auth	0007_alter_validators_add_error_messages	2023-04-29 17:59:45.503363+00
14	auth	0008_alter_user_username_max_length	2023-04-29 17:59:45.519598+00
15	auth	0009_alter_user_last_name_max_length	2023-04-29 17:59:45.532298+00
16	auth	0010_alter_group_name_max_length	2023-04-29 17:59:45.545391+00
17	auth	0011_update_proxy_permissions	2023-04-29 17:59:45.557499+00
18	auth	0012_alter_user_first_name_max_length	2023-04-29 17:59:45.571437+00
19	contact	0001_initial	2023-04-29 17:59:45.58059+00
20	jobs	0001_initial	2023-04-29 17:59:45.626486+00
21	sessions	0001_initial	2023-04-29 17:59:45.65834+00
22	accounts	0002_alter_profile_image	2023-04-29 22:10:13.55324+00
23	jobs	0002_remove_job_vacancy_alter_job_description_and_more	2023-04-29 22:14:04.27571+00
24	jobs	0003_alter_applicantsdata_cover_latter_and_more	2023-04-29 22:35:26.92203+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
v683v8lgljpk5tdqstb7hind73jc8pqu	.eJxVjDsOwjAQBe_iGln-7K5lSnrOYK0_4ACypTipEHcnkVJA-2bmvUXgdalhHWUOUxZnocXpd4ucnqXtID-43btMvS3zFOWuyIMOee25vC6H-3dQedStdphTBAXgLSRAdmS8JiZGrTIzOZ8jK0a0qB2pzYbIN0_WmJgAkvh8AcgMN1s:1pssgC:3UQCi3NwOWIHFTWqaXDe6mdyf5v7KjGVd_-WdD5LPXw	2023-05-13 22:04:32.602817+00
xmj9gpycr58xjy96whnghp5c1o1cizqe	.eJxVjDsOwjAQBe_iGlne9WctSnrOYK1_OIAcKU4qxN0hUgpo38y8lwi8rS1soyxhyuIsQJx-t8jpUfoO8p37bZZp7usyRbkr8qBDXudcnpfD_TtoPNq3JnaeKUKxRKR0tQkqE3BO2gKZ6LRDldCh9R5r4UjZaWDUaGpUxon3B9GLNzI:1ptTmQ:GpxfvrBN8qhk1x7nnbsCO45WvxxGrbmKr_LpIR_rWoY	2023-05-15 13:41:26.874412+00
\.


--
-- Data for Name: jobs_applicantsdata; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.jobs_applicantsdata (id, name, email, website, cv, cover_latter, created_at, job_id) FROM stdin;
1	Sofia Flores	sflores@email.com	https://pypi.org/	apply/cv-template-iconic2x.png	Sofia Flores\r\n\r\n(123) 456 7891\r\n\r\nsflores@email.com\r\n\r\nMay 1, 2018\r\n\r\nDear Hiring Manager,\r\n\r\nI'm excited to be applying for the Software Developer position at Cloud Clearwater. With software development, there is always something new to discover. Designing a program that is truly helpful to the user is my ultimate goal on every project, and I am delighted by the opportunity to apply my knowledge at Cloud Clearwater, a top provider of cloud services.\r\n\r\nDuring my previous role at River Tech, I provided support for a role-oriented parts management system that allowed the users to track parts, jobs, tasks, statistics and other job and employee data. This system is utilized by an Air Force depot to track all progress on the parts and labor required to repair and supply airplanes. As part of my duties, I provided enhancements to the program and also provided immediate solutions to unexpected problems.	2023-04-29 22:34:40.361787+00	1
\.


--
-- Data for Name: jobs_category; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.jobs_category (id, name) FROM stdin;
1	IT
\.


--
-- Data for Name: jobs_job; Type: TABLE DATA; Schema: public; Owner: abbas
--

COPY public.jobs_job (id, title, job_type, description, published_at, salary, experience, image, slug, category_id) FROM stdin;
1	Python Engineer - AI Solutions	Full Time	If you are a Python Engineer with experience, please read on!\r\n\r\nHeadquartered in the Bay Area CA with remote teams across the nation, we are a booming SaaS company focusing on AI solutions! Due to growth and demand for our services, we are urgently looking to add a Senior Python Engineer to our diverse and growing team!\r\n\r\nTop Reasons to Work with Us\r\nHUGE opportunity for growth!\r\nCompetitive base salary!\r\nCutting-edge tech!\r\nFully remote opportunity!\r\nWhat You Need for this Position\r\nBSCS or equivalent technical degree preferred\r\n2+ years of professional experience in software development\r\nStrong experience with Python and frameworks like Flask, FastAPI, Django, etc\r\nDatabase experience with relational databases and/or Redis\r\nExperience with containerization (Docker) and distributed systems on AWS\r\nExperience with Linux system admin\r\nFamiliarity with GPT, NLP, and large language models/neural networks\r\nWhat's In It for You\r\nCompetitive base salary ($100-120k DOE) + Bonus\r\nComprehensive benefits package (Medical, Dental, Vision)\r\nGreat PTO\r\nFun and innovative company culture\r\nWell-funded start up at critical stage of growth\r\nSo, if you are a Python Engineer with experience, please apply today!\r\n\r\nColorado employees will receive paid sick leave. For additional information about available benefits, please contact Noah Gjertsen-Illig\r\n\r\nEmail Your Resume In Word To\r\n\r\nLooking forward to receiving your resume through our website and going over the position with you. Clicking apply is the best way to apply, but you may also:\r\n\r\nNoah.Gjertsen-Illig@CyberCoders.com\r\nPlease do NOT change the email subject line in any way. You must keep the JobID: linkedin : NG5-1739077L312 -- in the email subject line for your application to be considered.***\r\nNoah Gjertsen-Illig - Lead Recruiter - CyberCoders\r\n\r\nApplicants must be authorized to work in the U.S.\r\n\r\nCyberCoders, Inc is proud to be an Equal Opportunity Employer\r\n\r\nAll qualified applicants will receive consideration for employment without regard to race, color, religion, sex, national origin, disability, protected veteran status, or any other characteristic protected by law.\r\n\r\nYour Right to Work – In compliance with federal law, all persons hired will be required to verify identity and eligibility to work in the United States and to complete the required employment eligibility verification document form upon hire.	2023-04-29 22:15:11.807128+00	120	2		python-engineer-ai-solutions	1
2	Python Developer	Full Time	📍Location: Spain\r\n\r\n🏠 90% remote: You will have to come to the office upon your manager request\r\n\r\n🌍 International environment\r\n\r\n💰Competitive salary and perks\r\n\r\nThe revolution starts with small things: driving EVs, taking profit from renewable energy sources to avoid fuel... At Wallbox we work to make the world greener!\r\n\r\nWhy join Wallbox?\r\n\r\nWe create smart charging systems that combine innovative technology with outstanding design and manage the communication between vehicle, grid, building, and charger. We work with electric cars, build smart chargers, use solar panels and inverters and integrate everything into solutions for users around the world.\r\n\r\nFounded in 2015 as a Barcelona based start-up, we have since grown to over 1000 Wallboxers from over 45 nationalities with a presence in Europe, Asia and the Americas!\r\n\r\nFrom a top Spanish start-up to the first Spanish company to be listed on the NYSE, we are growing rapidly and we want you on board!\r\n\r\nWhy should you apply?\r\nA strong team and feedback culture, as well as collaboration in an agile working environment of mutual support\r\nYoung but highly proficient environment\r\nYou will work with multiple departments across Wallbox and be exposed to a wide range of cutting-edge technologies!\r\n\r\nWhat will you be doing?\r\n\r\nYou will be involved in the development of all aspects of our testing platform for the Wallbox products. He/she will work in a cross-functional team with other SW, HW, and electrical engineers as well as with the product team. You will be responsible for:\r\nWriting efficient, reusable, and self-documented Python code.\r\nTesting is in your mindset at any time (unit testing, integration test, …).\r\nCollaborate with other engineers in team brainstorming and decision-making meetings.\r\n\r\nRequirements\r\n\r\nWhat are we looking for?\r\n2+ years of experience in Python programming.\r\nConcurrent programming knowledge (multithreading, multiprocessing, etc).\r\nComfort working with different OS (Linux, macOS, Windows).\r\nGood analytical, time management, and teamwork skills.\r\nFluent in English.\r\nExperience in developing APIs (REST, RPC, etc).\r\nBasic knowledge of CI/CD.\r\nExperience working with control version systems (GitHub, GitLab, etc).\r\nUnix or Linux scripting.\r\nExperience developing software for test setups, production lines, Hardware-in-the-Loop platforms, etc.\r\nExperience working with common communication protocols (CAN, Ethernet, ModBUS)\r\nSoftware architecture knowledge\r\nSoftware design patterns and principles.\r\n\r\nIf after reading the requirements you are missing a skill or two, no worries! We still encourage you to apply as our mission is to grow together 💪\r\n\r\nBenefits\r\nRemote friendly\r\nHalf-day Fridays!\r\nFirst-class private health insurance after your first month at Wallbox\r\nFree online language classes (Spanish & English) twice a week\r\nFlexible compensation valid for restaurants & food delivery apps, transportation, childcare, and learning & development.\r\nHundreds of discounts on different brands & services with our Wallbox Circle benefits platform\r\nCar discounts & special advantages if you choose an EV!\r\nLearn and grow in a company of over 45 nationalities and counting!	2023-05-01 13:42:43.86747+00	120	0		python-developer	1
3	Jr. Cloud Engineer (Python)	Full Time	Datasite is where deals are made. We provide the data rooms and SaaS technology used in M&A and other high-value transactions, to deliver projects in more than 170 countries. Carrying that success into the future is all about you. Your useful skills, your unusual experience, your unique ideas. Everyone here brings something unexpected. What’s yours? Invest your talents in us, and we’ll return the compliment.\r\n\r\nJob Description\r\n\r\nThe Junior Cloud Engineer role will design, install, test and maintain modern cloud infrastructure for a fast-growing SaaS based company using infrastructure as code-based techniques.\r\n\r\nKey Technology Experience, Preferred But Not Required\r\n\r\nLinux\r\nNetworking\r\nStorage\r\nPython\r\nAzure, GCP, AWS\r\nTerraform\r\nContainers\r\nKubernetes\r\nAnsible\r\nCloudflare\r\n\r\nEssential Duties And Responsibilities\r\n\r\nScripting/Application development with an emphasis on infrastructure.\r\nDesigns compute solutions derived from architecture standards, best practices, and direction from senior staff.\r\nPerforms advanced configuration & troubleshooting of Cloud based systems.\r\nPair with and perform activities assigned by Senior Cloud staff.\r\nMonitors server systems and assists in performing corrective actions.\r\nRespond to on-call alerts to assist in resolving outages.\r\n\r\nWho You Are\r\n\r\nYou are self-starting passionate technologist who enjoys rolling up their sleeves & getting their hands dirty learning new technologies and systems. You're looking forward to the career ahead you & are excited about the years you'll spend honing the knowledge and skills required to master technology in the Cloud engineering space. People notice and commend you on your Customer Service skills, leaving them looking forward to the next opportunity they'll have to work with you!\r\n\r\nQualifications\r\n\r\nTechnology is one of your passions.\r\nTechnology is woven into your hobbies.\r\n1-2 years hands on experience managing Linux based systems.\r\nAt least one programing language (Python preferred).\r\nGit and software development experience.\r\nGood communications skills and customer service attitude; bilingual in English & Spanish.\r\nAble to communicate effectively with peer groups.\r\nOrganization and analysis skills, problem solving ability.\r\nBachelor's or associate degree in IT or related field or equivalent experience\r\nExperience with Configuration Management/Deploy Automation tools.\r\nExperience with Agile/Scrum/Kanban process.\r\nWorking knowledge of security practices and tools (CIS hardening, best practices)\r\nFamiliarity with the best practices in the following topics: Capacity Planning, Performance, Monitoring/Management and Server/Cloud compute Design Architecture.\r\nAbility to work on multiple projects simultaneously.	2023-05-01 13:43:32.872729+00	90	0		jr-cloud-engineer-python	1
4	Software Engineer (Go/Python)	Part Time	Sauce Labs is the leading provider of continuous test and error reporting solutions that give companies the confidence to develop, deliver and update high quality software at speed. The Sauce Labs Continuous Testing Cloud identifies quality signals in development and production, accelerating the ability to release and update web and mobile applications that look, function and perform exactly as they should on every browser, operating system and device, every single time. Sauce Labs is a privately held company funded by TPG and Riverwood Capital. For more information, please visit https://saucelabs.com.\r\n\r\nAbout The Role\r\n\r\nThe Test Orchestration team is responsible for the orchestration layer, which maintains a lifecycle of crucial resources required by customers to execute their tests successfully. We help customers build digital confidence by providing an entry point to access Sauce Labs’ vast testing resources.\r\n\r\nBeing a Software Engineer at Test Orchestration team means you will take care of all new and existing services, API’s and other resources our team owns. It includes not only software artifacts but also architecture design, wide inter-team collaboration and product requirements discussion.\r\n\r\nKey Responsibilities\r\nExtend and scale the existing backend applications written in Python and Go\r\nStrive for constant improvement and contribute to the power of our agile development culture\r\nCollaborate with other teams on building our platform\r\nParticipate in on-call rotations to help teams troubleshoot urgent customer facing problems and other engineering issues\r\nJob Requirements\r\nProficiency in modern languages like Python or Golang\r\nGood understanding of relational and non relational databases\r\nExperience with Docker and Kubernetes\r\nExperience with CI/CD\r\nStrong sense of ownership and passion for engineering great products with stellar user experiences\r\nNice To Have\r\nExperience working in both high volatility (startup) and bigger organization environments\r\nExperience with observability and monitoring\r\nExperience with Redis\r\nSecurity Responsibilities At Sauce\r\n\r\nAt Sauce, we will commit to supporting the health and safety of employees and properties, partnering with internal stakeholders to learn and act on ever-evolving security protocols and procedures. You’ll be expected to fully comply with all policies and procedures related to security at the department and org wide level and exercise a ‘security first’ approach to how we design, build & run our products and services.\r\n\r\nSauce Labs is proud to be an Equal Opportunity employer and values diversity at our company. We do not discriminate on the basis of race, religion, color, national origin, gender identity/expression/status, sexual orientation, age, marital status, veteran status or disability status.\r\n\r\nPlease note our privacy terms when applying for a job at Sauce Labs.\r\n\r\n#Remote #SauceEU	2023-05-01 13:44:00.602248+00	45	0		software-engineer-gopython	1
5	Working Student (f/m/d) - Software Testing	Part Time	Cinemo is a fast paced, highly successful global company, a hidden champion, located in the heart of Karlsruhe (Germany), Budapest (Hungary) and Seoul (South Korea). With our team of 200+ international people, we are creating embedded and cloud software for the next generations of In-Vehicle Infotainment (IVI) systems. Our customers are top branded automotive companies around the world.\r\n\r\nWe are working to empower any device with media. We are growing fast, breathing innovation and customer centricity. For our team we need exceptionally talented, bright people with a drive to work hard for their customers, both internally and externally. If you would like to help us get our software and cloud services into every car, this is your chance to make history. For this position we are looking for a student who will be responsible for building and testing applications and tools on our platform.\r\n\r\nTasks\r\nTest applications on the platform following the use/test cases\r\nTest toolchain\r\nAssemble and bring up HW\r\nTest BSP variants by varying the defined configuration parameters\r\nReview the functionality of sample applications\r\n\r\nRequirements\r\nYou have experience with at least one of the following programming languages:\r\n\r\nC, C++, Java, Kotlin, Python\r\nYou have Experience with Linux/Android command line work\r\nYou have worked with version control systems (preferably Git) before\r\nYou are proficient in technical English (reading and writing)\r\n\r\nThe successful candidate will be based at our offices: Cinemo GmbH, Kaiserstr. 72, 76133 Karlsruhe, Germany.\r\n\r\nIf you are passionate about new technology and keen on working within an international team, Cinemo is looking for you!	2023-05-01 13:44:30.585404+00	35	0		working-student-fmd-software-testing	1
6	IT Student Assistant / Werkstudent (m/f/div)	Part Time	IT Student Assistant / Werkstudent (m/f/div)\r\n\r\n\r\nJob Share: Part-time (20 hours per week) – limited for 12 months\r\n\r\nLocation: FLOCERT GmbH Headquarter Bonn, Germany\r\n\r\nThe office language is English.\r\n\r\nSalary & benefits package: Collective Bargain Agreement Groß- & Außenhandel NRW, Level II for Student Assistants\r\n\r\nStart date: 1 June 2023 or as soon as possible\r\n\r\n\r\n\r\nDescription\r\n\r\n\r\nThe IT team at FLOCERT GmbH is looking for an enthusiastic and service-oriented person who is interested in working in an international environment.\r\n\r\nFlexibility and varied experience in IT troubleshooting are essential assets on this position. The person will be part of a small, dynamic international team, which is responsible for the ICT infrastructure of all business processes within FLOCERT connected to the Fairtrade certification.\r\n\r\n\r\n\r\nYour responsibilities\r\n\r\nDispatch helpline tickets and solve 1st level incidents and service requests\r\nPrinter maintenance (e.g., exchange printer cartridge)\r\nInstruct users on correct and efficient use of FLOCERT IT systems\r\nSupport to fix laptop problems\r\nSupport ground floor conference equipment users\r\nCommunicate with users face-to-face, over the phone, via Skype or via MS Teams to help set-up ICT related systems or resolve issues\r\nHelp to setup workplaces for new employees\r\nHelp to install and configure computer hardware operating systems and applications\r\nHelp Bonn employees when moving offices inside the building\r\nCoordinate hardware replacements and peripheral devices\r\n\r\n\r\nYour qualifications, experience and skills\r\n\r\nOfficially enrolled (certificate of matriculation) at university in any discipline\r\nFluency in English, both spoken and written\r\nFirst experience with Microsoft operating systems, both server and desktop\r\nFurther knowledge of Linux, mobile device management / telephony systems, MS Azure Active Directory, IT user support and ticketing systems would be an asset\r\nITIL knowledge (problem and incident management processes) would be an advantage\r\nTeam player with excellent interpersonal and organisational skills\r\nPro-active, hardworking, and reliable individual and workstyle\r\nExcellent communication skills, timely and IT-work related flexible, experience in dealing with different cultures\r\nStrong dedication towards customer service\r\nMotivation for Fairtrade\r\n\r\n\r\nWhat we offer\r\n\r\nInternational work environment\r\nCompany culture of dialogue and respect\r\nOnboarding and welcome management\r\nOpen-minded and value-driven colleagues living our mission\r\nRemote work and flexible working hours\r\nGood public transport connection, free of charge company parking spaces (for bikes as well as other vehicles)\r\nAttractive benefit package, e.g.: holiday bonus, 13th salary and more\r\nOpportunities to make a meaningful impact\r\nLearning and development opportunities\r\nChance for motivated staff to grow\r\n\r\n\r\nHow to apply\r\n\r\n\r\nClick on the lower button “APPLY NOW!” on our website and submit your complete application documents (motivation letter, CV).\r\n\r\n\r\nPlease kindly note that we only accept online applications and only candidates shortlisted for an interview will be further contacted and will receive notice of the outcome of the selection process.\r\n\r\n\r\nDo you still have questions? Then give us a call or send us an email.\r\n\r\n\r\nFLOCERT GmbH | Bonner Talweg 177 | 53129 Bonn | Regina Jatzke (HR Manager - Recruiting & Employer Branding)If you have questions, please contact us by phone: +49 228 2493-278 or eMail: recruitment@flocert.net	2023-05-01 13:45:08.574469+00	40	0		it-student-assistant-werkstudent-mfdiv	1
\.


--
-- Name: accounts_city_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.accounts_city_id_seq', 1, true);


--
-- Name: accounts_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.accounts_profile_id_seq', 1, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 48, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: contact_contactinfo_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.contact_contactinfo_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 13, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 12, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 24, true);


--
-- Name: jobs_applicantsdata_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.jobs_applicantsdata_id_seq', 1, true);


--
-- Name: jobs_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.jobs_category_id_seq', 1, true);


--
-- Name: jobs_job_id_seq; Type: SEQUENCE SET; Schema: public; Owner: abbas
--

SELECT pg_catalog.setval('public.jobs_job_id_seq', 6, true);


--
-- Name: accounts_city accounts_city_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.accounts_city
    ADD CONSTRAINT accounts_city_pkey PRIMARY KEY (id);


--
-- Name: accounts_profile accounts_profile_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_pkey PRIMARY KEY (id);


--
-- Name: accounts_profile accounts_profile_user_id_key; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_user_id_key UNIQUE (user_id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: contact_contactinfo contact_contactinfo_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.contact_contactinfo
    ADD CONSTRAINT contact_contactinfo_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: jobs_applicantsdata jobs_applicantsdata_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.jobs_applicantsdata
    ADD CONSTRAINT jobs_applicantsdata_pkey PRIMARY KEY (id);


--
-- Name: jobs_category jobs_category_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.jobs_category
    ADD CONSTRAINT jobs_category_pkey PRIMARY KEY (id);


--
-- Name: jobs_job jobs_job_pkey; Type: CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.jobs_job
    ADD CONSTRAINT jobs_job_pkey PRIMARY KEY (id);


--
-- Name: accounts_profile_city_id_267b3d7f; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX accounts_profile_city_id_267b3d7f ON public.accounts_profile USING btree (city_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: jobs_applicantsdata_job_id_87df3f40; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX jobs_applicantsdata_job_id_87df3f40 ON public.jobs_applicantsdata USING btree (job_id);


--
-- Name: jobs_job_category_id_fd8331ed; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX jobs_job_category_id_fd8331ed ON public.jobs_job USING btree (category_id);


--
-- Name: jobs_job_slug_3118e1f8; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX jobs_job_slug_3118e1f8 ON public.jobs_job USING btree (slug);


--
-- Name: jobs_job_slug_3118e1f8_like; Type: INDEX; Schema: public; Owner: abbas
--

CREATE INDEX jobs_job_slug_3118e1f8_like ON public.jobs_job USING btree (slug varchar_pattern_ops);


--
-- Name: accounts_profile accounts_profile_city_id_267b3d7f_fk_accounts_city_id; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_city_id_267b3d7f_fk_accounts_city_id FOREIGN KEY (city_id) REFERENCES public.accounts_city(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: accounts_profile accounts_profile_user_id_49a85d32_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_user_id_49a85d32_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: jobs_applicantsdata jobs_applicantsdata_job_id_87df3f40_fk_jobs_job_id; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.jobs_applicantsdata
    ADD CONSTRAINT jobs_applicantsdata_job_id_87df3f40_fk_jobs_job_id FOREIGN KEY (job_id) REFERENCES public.jobs_job(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: jobs_job jobs_job_category_id_fd8331ed_fk_jobs_category_id; Type: FK CONSTRAINT; Schema: public; Owner: abbas
--

ALTER TABLE ONLY public.jobs_job
    ADD CONSTRAINT jobs_job_category_id_fd8331ed_fk_jobs_category_id FOREIGN KEY (category_id) REFERENCES public.jobs_category(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

